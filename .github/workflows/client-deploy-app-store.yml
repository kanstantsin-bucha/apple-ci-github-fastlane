name: client-deploy-app-store
on:
  workflow_run:
    workflows: [run_tests]
    branches: [main]
    types:
      - completed
jobs:
  test:
    name: Deploy the App Store build to production TestFlight
    runs-on: macOS-13
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 30
    steps:
      - name: Select xCode
        run: sudo xcode-select -s /Applications/Xcode_15.2.app
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install gems
        run: bundle install
      # - name: Snyk: install
      #   run: brew tap snyk/tap && brew install snyk
      # - name: Snyk: test of dependencies
      #   run: snyk -d test --file=./AppThirdPartyPackage/Package.swift
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN_PRODUCTION }}
      - name: Create the application config from secrets
        run: ./Scripts/CreateAppConfigFromEnv.swift
        env:
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID_PRODUCTION }}
          COGNITO_POOL_ID: ${{ secrets.COGNITO_POOL_ID_PRODUCTION }}
          COGNITO_REGION_ID: ${{ secrets.COGNITO_REGION_ID_PRODUCTION }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN_PRODUCTION }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
          REVENUE_CAT_KEY: ${{ secrets.REVENUE_CAT_KEY_PRODUCTION }}
          ONESIGNAL_APP_ID: ${{ secrets.ONE_SIGNAL_APP_ID_PRODUCTION }}
          APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY_PRODUCTION }}
          APPLE_APP_ID: ${{ secrets.APPLE_APP_ID_PRODUCTION }}
      - name: Deploy the App Store build to production TestFlight
        run: bundle exec fastlane client_deploy_production_app_store
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
          APPLE_API_KEY_P8: ${{ secrets.APPLE_API_KEY_P8 }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          SENTRY_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          ITUNES_CONNECT_TEAM_ID: ${{ secrets.ITUNES_CONNECT_TEAM_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APP_ID: ${{ vars.APP_ID }}
          MATCH_GIT_URL: ${{ vars.MATCH_GIT_URL }}
